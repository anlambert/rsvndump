#!/bin/sh
#
#	Test script for rsvndump
#	written by Jonas Gehring <jonas.gehring@boolsoft.org>
#
#	Dumps a repository from my slug, imports it into a
#	local repository, dumps it again and compares the 
#	output with a file generated by 'svnadmin dump'.
#	This is done in offline as well as in online mode
#
#	It is assumed this script is being run from within
#	the 'tests' folder
#
#	Test can be explictely disabled via arguments:
#	  --disable-offline
#	  --disable-online
#	  --disable-valgrind (disables both of the following)
#	  --disable-valgrind-offline
#	  --disable-valgrind-online
#


# Function to set test authentication (use: set_auth $dir $user $pass)
function set_auth {
	echo "[general]" > "$1/conf/passwd"
	echo "password-db = passwd" >> "$1/conf/svnserve.conf"
	echo "realm = $1" >> "$1/conf/svnserve.conf"
	echo "anon-access = none" >> "$1/conf/svnserve.conf"
	echo "auth-access = write" >> "$1/conf/svnserve.conf"
	echo "[users]" > "$1/conf/passwd"
	echo "$2 = $3" >> "$1/conf/passwd"
}


# Some constants 
REPO="svn://slug/rsvndump/trunk"
DUMPFILE="dump"
LOCALDIR="testrepo"
LOCALREPO="svn://localhost/testrepo"
LOCALUSER="user"
LOCALPASS="pass"

TEST_OFFLINE="1"
TEST_ONLINE="1"
TEST_VALGRIND_OFFLINE="1"
TEST_VALGRIND_ONLINE="1"

# Parse arguments
OK=0
while [ $OK -eq 0 ]; do
	case "$1" in
		--disable-offline) TEST_OFFLINE="0";;
		--disable-online) TEST_ONLINE="0";;
		--disable-valgrind) TEST_VALGRIND_OFFLINE="0"; TEST_VALGRIND_ONLINE="0";;
		--disable-valgrind-offline) TEST_VALGRIND_OFFLINE="0";;
		--disable-valgrind-online) TEST_VALGRIND_ONLINE="0";;
	esac
	shift;
	OK=$?
done

# Disable valgrind test if the program is not installed
if [ -z `which valgrind 2> /dev/null` ]; then
	echo "WARNING: Valgrind binary was not found, disabling valgrind tests"
	TEST_VALGRIND_OFFLINE="0"
	TEST_VALGRIND_ONLINE="0"
fi


# Kill any remaining svnserves
if [ "`ps ax|grep svnserve|wc -l`" != "1" ]; then
	killall svnserve
fi

# Build executable and copy it to this directory
cd .. && make clean
CFLAGS="-g" ./configure
make
if [ "$?" != "0" ]; then
	echo "ERROR: making project failed... aborting"
	exit 1
fi
cp src/rsvndump tests
cd tests

# Start local svnserve
svnserve -d -r .


#
# Default offline mode
#
if [ "$TEST_OFFLINE" = "1" ]; then 
	BEGIN=$(date +%s)
	echo "================================================================="
	echo "= Doing offline mode test...                                    ="
	echo "================================================================="
	echo ">> Performing remote dump..."
	svn -q -r 0:HEAD log "${REPO}"| ./rsvndump -o ${DUMPFILE} "${REPO}" 2> log
	rm -rf ${LOCALDIR}
	mkdir ${LOCALDIR}
	svnadmin create ${LOCALDIR}
	set_auth ${LOCALDIR} ${LOCALUSER} ${LOCALPASS}
	echo ">> Performing local import..."
	cat ${DUMPFILE}| svnadmin load ${LOCALDIR} >> log
	echo ">> Performing local dump..."
	svn -q -r 0:HEAD --username "${LOCALUSER}" --password "${LOCALPASS}" log "${LOCALREPO}"| \
./rsvndump -o "${DUMPFILE}_local" -u "${LOCALUSER}" -p "${LOCALPASS}" "${LOCALREPO}" 2>> log
	echo ">> Performing local svnadmin dump..."
	svnadmin dump "${LOCALDIR}" > "${DUMPFILE}_svnadmin" 2>> log
	echo ">> Comparing dumps..."
	diff -a "${DUMPFILE}" "${DUMPFILE}_local" >> log
	diff -a "${DUMPFILE}_local" "${DUMPFILE}_svnadmin" >> log
	diff -a "${DUMPFILE}" "${DUMPFILE}_svnadmin" >> log
	echo 
	echo -n ">>> Offline test done in "
	NOW=$(date +%s)
	let DIFF=$(($NOW - $BEGIN))
	let MINS=$(($DIFF / 60))
	let SECS=$(($DIFF % 60))
	echo -ne $MINS:`printf %02d $SECS` 
	echo " minutes"
	echo 
fi


#
# Online mode
#
if [ "$TEST_ONLINE" = "1" ]; then 
	BEGIN=$(date +%s)
	echo "================================================================="
	echo "= Doing online mode test...                                     ="
	echo "================================================================="
	echo ">> Performing remote dump..."
	svn -q -r 0:HEAD log "${REPO}"| ./rsvndump -o ${DUMPFILE} --online "${REPO}" 2>> log
	rm -rf ${LOCALDIR}
	mkdir ${LOCALDIR}
	svnadmin create ${LOCALDIR}
	set_auth ${LOCALDIR} ${LOCALUSER} ${LOCALPASS}
	echo ">> Performing local import..."
	cat ${DUMPFILE}| svnadmin load ${LOCALDIR} >> log
	echo ">> Performing local dump..."
	svn -q -r 0:HEAD --username "${LOCALUSER}" --password "${LOCALPASS}" log "${LOCALREPO}"| \
./rsvndump -o "${DUMPFILE}_local" -u "${LOCALUSER}" -p "${LOCALPASS}" --online "${LOCALREPO}" 2>> log
	echo ">> Performing local svnadmin dump..."
	svnadmin dump "${LOCALDIR}" > "${DUMPFILE}_svnadmin" 2>> log
	echo ">> Comparing dumps..."
	diff -a "${DUMPFILE}" "${DUMPFILE}_local" >> log
	diff -a "${DUMPFILE}_local" "${DUMPFILE}_svnadmin" >> log
	diff -a "${DUMPFILE}" "${DUMPFILE}_svnadmin" >> log
	echo 
	echo -n ">>> Online test done in "
	NOW=$(date +%s)
	let DIFF=$(($NOW - $BEGIN))
	let MINS=$(($DIFF / 60))
	let SECS=$(($DIFF % 60))
	echo -ne $MINS:`printf %02d $SECS` 
	echo " minutes"
	echo 
fi


#
# Default offline mode with valgrind leak checking
#
if [ "$TEST_VALGRIND_OFFLINE" = "1" ]; then 
	BEGIN=$(date +%s)
	echo "================================================================="
	echo "= Doing offline mode test against valgrind                      ="
	echo "================================================================="
	echo ">> Performing remote dump..."
	svn -q -r 0:HEAD log "${REPO}" > svn.log
	valgrind --leak-check=full --show-reachable=yes --log-file=valgrind_remote_off.log ./rsvndump -o ${DUMPFILE} "${REPO}" 2>> log
	rm -rf ${LOCALDIR}
	mkdir ${LOCALDIR}
	svnadmin create ${LOCALDIR}
	set_auth ${LOCALDIR} ${LOCALUSER} ${LOCALPASS}
	echo ">> Performing local import..."
	cat ${DUMPFILE}| svnadmin load ${LOCALDIR} >> log
	echo ">> Performing local dump..."
	svn -q -r 0:HEAD --username "${LOCALUSER}" --password "${LOCALPASS}" log "${LOCALREPO}" > svn.log
	valgrind --leak-check=full --show-reachable=yes --log-file=valgrind_local_off.log ./rsvndump -o "${DUMPFILE}_local" -u "${LOCALUSER}" -p "${LOCALPASS}" "${LOCALREPO}" 2>> log
	echo -n ">>> Offline test done in "
	NOW=$(date +%s)
	let DIFF=$(($NOW - $BEGIN))
	let MINS=$(($DIFF / 60))
	let SECS=$(($DIFF % 60))
	echo -ne $MINS:`printf %02d $SECS` 
	echo " minutes"
	echo 
fi


#
# Online mode with valgrind leak checking
#
if [ "$TEST_VALGRIND_ONLINE" = "1" ]; then 
	BEGIN=$(date +%s)
	echo "================================================================="
	echo "= Doing online mode test against valgrind                       ="
	echo "================================================================="
	echo ">> Performing remote dump..."
	svn -q -r 0:HEAD log "${REPO}" > svn.log
	valgrind --leak-check=full --show-reachable=yes --log-file=valgrind_remote_on.log ./rsvndump -o ${DUMPFILE} --online "${REPO}" 2>> log
	rm -rf ${LOCALDIR}
	mkdir ${LOCALDIR}
	svnadmin create ${LOCALDIR}
	set_auth ${LOCALDIR} ${LOCALUSER} ${LOCALPASS}
	echo ">> Performing local import..."
	cat ${DUMPFILE}| svnadmin load ${LOCALDIR} >> log
	echo ">> Performing local dump..."
	svn -q -r 0:HEAD --username "${LOCALUSER}" --password "${LOCALPASS}" log "${LOCALREPO}" > svn.log
	valgrind --leak-check=full --show-reachable=yes --log-file=valgrind_local_off.log ./rsvndump -o "${DUMPFILE}_local" -u "${LOCALUSER}" -p "${LOCALPASS}" --online "${LOCALREPO}" 2>> log
	echo -n ">>> Online test done in "
	NOW=$(date +%s)
	let DIFF=$(($NOW - $BEGIN))
	let MINS=$(($DIFF / 60))
	let SECS=$(($DIFF % 60))
	echo -ne $MINS:`printf %02d $SECS` 
	echo " minutes"
	echo 
fi


exit 0
